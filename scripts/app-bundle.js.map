{"version":3,"sources":["app.js","environment.js","main.js","resources/index.js"],"names":["App","constructor","message","debug","testing","configure","Promise","config","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","instance","i18next","setup","backend","loadPath","lng","attributes","fallbackLng","start","then","setRoot"],"mappings":";;;;;;AAAO,QAAMA,GAAN,CAAU;AACfC,kBAAc;AACZ,WAAKC,OAAL,GAAe,cAAf;AACD;AAHc;UAAJF,MAAAA;;;;;;;;oBCAE;AACbG,WAAO,IADM;AAEbC,aAAS;AAFI;;;;;;;;UCSCC,YAAAA;;;;;;;;;;;;AANhBC,UAAQC,MAAR,CAAe;AACbC,cAAU;AACRC,wBAAkB;AADV;AADG,GAAf;;AAMO,WAASJ,SAAT,CAAmBK,OAAnB,EAA4B;AACjCA,YAAQC,GAAR,CACGC,qBADH,GAEGC,OAFH,CAEW,WAFX;;AAIA,QAAI,sBAAYV,KAAhB,EAAuB;AACrBO,cAAQC,GAAR,CAAYG,kBAAZ;AACD;;AAED,QAAI,sBAAYV,OAAhB,EAAyB;AACvBM,cAAQC,GAAR,CAAYI,MAAZ,CAAmB,iBAAnB;AACD;;AAED;AACAL,YAAQC,GAAR,CAAYI,MAAZ,CAAmB,cAAnB,EAAoCC,QAAD,IAAc;AAC/C;AACAA,eAASC,OAAT,CAAiBN,GAAjB;;AAEA,aAAOK,SAASE,KAAT,CAAe;AACpBC,iBAAS;AACPC,oBAAU;AADH,SADW;AAIpBC,aAAM,IAJc;AAKpBC,oBAAa,CAAC,GAAD,EAAK,MAAL,CALO;AAMpBC,qBAAc,IANM;AAOpBpB,eAAQ;AAPY,OAAf,CAAP;AASD,KAbD;;AAeAO,YAAQc,KAAR,GAAgBC,IAAhB,CAAqB,MAAMf,QAAQgB,OAAR,EAA3B;AACD;;;;;;;;UCvCerB,YAAAA;AAAT,WAASA,SAAT,CAAmBE,MAAnB,EAA2B;AAChC;AACD","file":"app-bundle.js","sourcesContent":["export class App {\n  constructor() {\n    this.message = 'Hello World!';\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\nimport Backend from 'i18next-xhr-backend';\n\nPromise.config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  //register the plugin\n  aurelia.use.plugin('aurelia-i18n', (instance) => {\n    // register backend plugin\n    instance.i18next.use(Backend);\n\n    return instance.setup({\n      backend: {\n        loadPath: './locales/{{lng}}/{{ns}}.json',\n      },\n      lng : 'es',\n      attributes : ['t','i18n'],\n      fallbackLng : 'en',\n      debug : false\n    });\n  });\n\n  aurelia.start().then(() => aurelia.setRoot());\n}","export function configure(config) {\n  //config.globalResources([]);\n}\n"],"sourceRoot":".."}